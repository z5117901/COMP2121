; Authors: 


.include "m2560def.inc"


.def r16, mainCount
.def r17, powCount
.def r18, sum_l
.def r19, sum_h
.def r24, result_l
.def r25, result_h

 
.dseg	;data segment
//global vars
x: .byte 1
n: .byte 1

.cseg
	rjmp reset
	constant_1: .db 10
	constant_2: .db 3

reset:
	ldi zL, low(constant_1)
	ldi zH, high(constant_1)
	lpm r16, Z
	sts x, r16
	ldi zL, low(constant_2)
	ldi zH, high(constant_2)
	lpm r16, Z
	sts n, r16
	
	ldi yl, low(ramend)
	ldi yh, high(ramend)
	out sph, yl
	out spl, yh
		
	rcall main

	halt: rjmp halt
/////////////////

main:
	clr sum_l
	clr sum_h
	clr mainCount
	
	
	loopPoint:
	cpi n, mainCount
	brlt end	; loop condition
	push mainCount	; puttin onto stack
	rcall pow		; calling power function
	pop result_h	; returnin func values which loaded onto stack
	pop result_l
	inc mainCount
	rjmp loopPoint
	end:
ret

//////////////////////


pow: 
	pop powCount	//pop variables off stack
	
	powLoop:



	
//push result back onto stack
	push result_l
	push result_h
ret

/////////////////////

.macro schlump

.endmacro
