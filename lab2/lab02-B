.include "m2560def.inc"

.def zero = r15
.def mainCount = r16
.def powCount = r17
.def sum_l = r18
.def sum_h = r19
.def result_l = r24
.def result_h = r25

.macro schlump ; a *b (schlump is my bad attempt to mix words, result, num & power(sounds fun))
	mul @0, @2	; a_l * b_l
	movw @5:@4, r1:r0
	mul @1, @2	; a_h * b_h
	add @5, r0
	mul @0, @3	; b_h * a_l
	add @5, r0
.endmacro
 
.dseg	;data segment
//global vars
XES: .byte 1
n: .byte 1

.cseg
	rjmp reset
	constant_1: .db 10
	constant_2: .db 3

reset:
	ldi zL, low(constant_1)		; setting global vals
	ldi zH, high(constant_1)
	lpm r16, Z
	sts XES, r16					
	ldi zL, low(constant_2)
	ldi zH, high(constant_2)
	lpm r16, Z
	sts n, r16
	
	rcall main

	halt: rjmp halt
/////////////////

main:

	ldi yl, low(ramend-4)	;initiating stack
	ldi yh, high(ramend-4)
	out sph, yl
	out spl, yh

	clr sum_l		;sum = 0
	clr sum_h
	clr mainCount	; mainC = 0
	
	
	loopPoint:
	cpi n, mainCount
	brlt end	; loop condition
	std y+1, mainCount
	ldd r22, y+1
	rcall pow		; calling power function

	std y+1, r24
	std y+2, r25
	;pop result_h	; returnin func values which loaded onto stack
	;pop result_l
	inc mainCount
	rjmp loopPoint
	end:
ret

//////////////////////

pow: 
	;prologue:
	push yl
	push yh
	push r16; powCount
	push r17
	push r18
	push r19
	push zero
	in yl, spl
	in yh, sph
	sbiw yh:yl, 8
	out sph, yh
	out spl, yl
	std y+1, r22 ; passing maincount to power

	;body

	clr zero
	clr r23		; initialing  i to 0
	clr r21		; initializing num to 1
	ldi r20, 1
	ldd r23, y+1	; load power
	ldi r16, 3		; put x(global var into r17:r16)
	ldi r17, high(3)
	loop:
	cp r16, r23; comparing i with power
	brlt done		; if power < i
	schlump r20, r21, r16, r17, r18, r19; num *= x
	movw r21:r20, r19:r18
	inc 23
	rjmp loop

done:
	movw r25:r24, r21:r20

	;epilogue
	// need to de-allocate  space used 
	adiw yh:yl, 8
	out sph, yh
	out spl, yl
	pop zero
	pop r19
	pop r18
	pop r17
	pop r16
	pop r29	;the stac pointrs
	pop r28
	; end of epilogue
ret; back to main


//http://www.cse.unsw.edu.au/~cs2121/LectureNotes/week6_notes.pdf this was extremely helpful
